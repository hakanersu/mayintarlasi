var f=Object.defineProperty;var c=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var l=(o,e,t)=>c(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();const a=20,m=40,u=document.getElementsByClassName("grid")[0],g={row:0,column:0,mineCount:0,isMine:!1,isFlagged:!1,isRevealed:!1};class p{constructor(){l(this,"grid",[]);l(this,"positions",[]);l(this,"status",{status:"playing"})}render(){this.setMinePositions(),this.buildGrid(),this.renderBoard(),this.setMineCounts(),this.handleReset()}handleReset(){const e=document.getElementById("reset");e==null||e.addEventListener("click",()=>{this.reset()})}reset(){this.grid=[],this.positions=[],this.status={status:"playing"},this.render()}renderBoard(){u.innerHTML="";for(let e of this.grid){let t=document.createElement("ul");for(let s of e){let i=this.createCell(s);t.appendChild(i)}u.appendChild(t)}}createCell(e){let t=document.createElement("li");return t.dataset.row=e.row.toString(),t.dataset.column=e.column.toString(),t.dataset.isMine=e.isMine.toString(),t.dataset.isRevealed=e.isRevealed.toString(),t.dataset.nearMine=e.mineCount!==0?"true":"false",e.mineCount>0&&(t.innerHTML=e.mineCount.toString()),t.addEventListener("click",()=>this.handleCellClick(e)),t}handleCellClick(e){this.status.status==="playing"&&(this.grid[e.row][e.column].isRevealed=!0,e.mineCount===0&&this.showZeros(e),e.isMine&&this.gameOver(),this.renderBoard())}showZeros(e){this.neighborCells(e,t=>{t.mineCount===0&&!t.isRevealed&&!t.isMine&&(t.isRevealed=!0,this.showZeros(t)),t.mineCount>0&&(t.isRevealed=!0)})}gameOver(){for(let e of this.grid)for(let t of e)t.isMine&&(t.isRevealed=!0);this.status={status:"lost"}}setMineCounts(){this.status={status:"playing"};for(let e in this.grid)for(let t in this.grid[e]){let s=this.grid[e][t];s.isMine||(this.neighborCells(s,i=>{i.isMine&&s.mineCount++}),this.grid[e][t]=s)}}setMinePositions(){for(let e=0;e<m;e++){let t=Math.floor(Math.random()*a),s=Math.floor(Math.random()*a);if(this.positions.includes([t,s])){e--;continue}this.positions.push([t,s])}}buildGrid(){for(let e=0;e<a;e++){let t=[];for(let s=0;s<a;s++)t.push({...g,row:e,column:s,isMine:this.positions.some(i=>i[0]===e&&i[1]===s)});this.grid.push(t),t=[]}}neighborCells(e,t){var s;for(let i=-1;i<=1;i++)for(let r=-1;r<=1;r++){if(i===0&&r===0)continue;let n=e.row+i,h=e.column+r,d=(s=this.grid[n])==null?void 0:s[h];d&&t(d)}}}const M=new p;M.render();
